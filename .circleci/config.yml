defaults: &defaults
  docker:
    - image: circleci/node:dubnium-browsers

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - .next

  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set default profile
          command: |
            mkdir -p ~/.aws
            touch ~/.aws/config
            echo '[default]' >> ~/.aws/config
      - run:
          name: Install pip3 libs
          command: |
            sudo pip3 install -U \
              awscli==1.16.* \
              ansible==2.8.*
      - run:
          name: Install apt-get libs
          command: |
            sudo apt-get install -y \
              python3-requests=2.21.* \
              python3-docker=3.4.* \
              gnupg2=2.2.* \
              pass=1.7.*
      - run:
          name: Deploy to AWS
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              AWS_DEFAULT_REGION=us-east-1 ANSIBLE_CONFIG=ansible/ansible.cfg ansible-playbook ansible/release-deploy.yml -i ansible/staging --extra-vars "branch=master aws_profile=default" -v
            elif [ "${CIRCLE_BRANCH}" == "production" ]; then
              AWS_DEFAULT_REGION=us-east-1 ANSIBLE_CONFIG=ansible/ansible.cfg ansible-playbook ansible/release-deploy.yml -i ansible/production --extra-vars "branch=production aws_profile=default" -v
            fi

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - prepare
      - build:
          requires:
            - prepare
      - deploy:
          requires:
            - prepare
            - build
          filters:
            branches:
              only:
                - master
                - production
